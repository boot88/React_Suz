// server/config/database.render.js
const { Pool } = require('pg');

console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PostgreSQL –ø—É–ª–∞...');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Render
const poolConfig = {
  host: process.env.DB_HOST || 'dpg-d2vakqh5pdvs73b7ju7g-a',
  port: process.env.DB_PORT || 5432,
  database: process.env.DB_NAME || 'suz_bd',
  user: process.env.DB_USER || 'suz_bd_user',
  password: process.env.DB_PASSWORD || 'tOU6wdBLnkeSOuYSrvCFpnQ3oLL1f8vk',
  ssl: process.env.NODE_ENV === 'production' ? { 
    rejectUnauthorized: false 
  } : false,
  // –¢–∞–π–º–∞—É—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
  connectionTimeoutMillis: 5000,
  idleTimeoutMillis: 30000,
  max: 10
};

const pool = new Pool(poolConfig);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
pool.on('connect', (client) => {
  console.log('‚úÖ –ù–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
});

pool.on('error', (err, client) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ PostgreSQL –ø—É–ª–∞:', err);
});

// –¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
pool.connect((err, client, release) => {
  if (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL:', err.message);
  } else {
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL');
    release();
  }
});

module.exports = pool;